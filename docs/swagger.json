{
    "swagger": "2.0",
    "info": {
        "description": "API untuk mengelola donor darah, stok darah, dan informasi pendonor dengan autentikasi OAuth.",
        "title": "Donor App API",
        "termsOfService": "https://donor-darah.duckdns.org/terms",
        "contact": {
            "name": "Ulil Amry",
            "url": "https://donor-darah.duckdns.org",
            "email": "support@donor-darah.duckdns.org"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "basePath": "/api/v1",
    "paths": {
        "/auth/google": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Autentikasi pengguna menggunakan Google ID Token dan mengembalikan token login",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Google Authentication",
                "responses": {
                    "200": {
                        "description": "Autentikasi berhasil, token ada di field 'data'",
                        "schema": {
                            "$ref": "#/definitions/dto.SuccessWrapper"
                        }
                    },
                    "400": {
                        "description": "Token tidak valid atau hilang",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorWrapper"
                        }
                    },
                    "401": {
                        "description": "Autentikasi Google gagal",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorWrapper"
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "User Login",
                "parameters": [
                    {
                        "description": "Kredensial Login",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login berhasil, token ada di field 'data'",
                        "schema": {
                            "$ref": "#/definitions/dto.SuccessWrapper"
                        }
                    },
                    "401": {
                        "description": "Kredensial tidak valid",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorWrapper"
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "Data Registrasi",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User berhasil dibuat, data user ada di field 'data'",
                        "schema": {
                            "$ref": "#/definitions/dto.SuccessWrapper"
                        }
                    },
                    "400": {
                        "description": "Request tidak valid",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorWrapper"
                        }
                    }
                }
            }
        },
        "/auth/register/admin": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Register a new user with admin role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Register a new admin user",
                "parameters": [
                    {
                        "description": "Data Registrasi",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Admin berhasil dibuat, data user ada di field 'data'",
                        "schema": {
                            "$ref": "#/definitions/dto.SuccessWrapper"
                        }
                    },
                    "400": {
                        "description": "Request tidak valid",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorWrapper"
                        }
                    }
                }
            }
        },
        "/auth/register/super-admin": {
            "post": {
                "description": "Register a new user with super admin role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Register a new super admin user",
                "parameters": [
                    {
                        "description": "Data Registrasi",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Super admin berhasil dibuat, data user ada di field 'data'",
                        "schema": {
                            "$ref": "#/definitions/dto.SuccessWrapper"
                        }
                    },
                    "400": {
                        "description": "Request tidak valid",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorWrapper"
                        }
                    }
                }
            }
        },
        "/blood-requests": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Mengambil daftar semua permintaan darah dengan paginasi",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Blood Requests"
                ],
                "summary": "Get all blood requests",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Nomor halaman",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Jumlah item per halaman",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Berhasil mengambil daftar permintaan darah",
                        "schema": {
                            "$ref": "#/definitions/dto.SuccessWrapper"
                        }
                    },
                    "500": {
                        "description": "Terjadi kesalahan internal",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorWrapper"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Menambahkan permintaan darah baru ke sistem",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Blood Requests"
                ],
                "summary": "Create a new blood request",
                "parameters": [
                    {
                        "description": "Data Permintaan Darah",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.BloodRequestRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Permintaan darah berhasil dibuat",
                        "schema": {
                            "$ref": "#/definitions/dto.SuccessWrapper"
                        }
                    },
                    "400": {
                        "description": "Request tidak valid",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Terjadi kesalahan internal",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorWrapper"
                        }
                    }
                }
            }
        },
        "/blood-requests/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Mengambil satu permintaan darah berdasarkan ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Blood Requests"
                ],
                "summary": "Get blood request by ID",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "ID Permintaan Darah",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Berhasil mengambil data permintaan darah",
                        "schema": {
                            "$ref": "#/definitions/dto.SuccessWrapper"
                        }
                    },
                    "400": {
                        "description": "Format ID tidak valid",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorWrapper"
                        }
                    },
                    "404": {
                        "description": "Data tidak ditemukan",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorWrapper"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Memperbarui permintaan darah yang sudah ada berdasarkan ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Blood Requests"
                ],
                "summary": "Update a blood request",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "ID Permintaan Darah",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Data Permintaan Darah yang Diperbarui",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.BloodRequestRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Permintaan darah berhasil diperbarui",
                        "schema": {
                            "$ref": "#/definitions/dto.SuccessWrapper"
                        }
                    },
                    "400": {
                        "description": "Format ID atau request tidak valid",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Terjadi kesalahan internal",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorWrapper"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Menghapus permintaan darah berdasarkan ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Blood Requests"
                ],
                "summary": "Delete a blood request",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "ID Permintaan Darah",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Permintaan darah berhasil dihapus",
                        "schema": {
                            "$ref": "#/definitions/dto.SuccessWrapper"
                        }
                    },
                    "400": {
                        "description": "Format ID tidak valid",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Terjadi kesalahan internal",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorWrapper"
                        }
                    }
                }
            }
        },
        "/donations": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Mengambil daftar semua data donasi dengan paginasi",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Donations"
                ],
                "summary": "Get all donations",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Nomor halaman",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Jumlah item per halaman",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Berhasil mengambil daftar donasi",
                        "schema": {
                            "$ref": "#/definitions/dto.SuccessWrapper"
                        }
                    },
                    "500": {
                        "description": "Terjadi kesalahan internal",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorWrapper"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Menambahkan data donasi baru ke sistem",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Donations"
                ],
                "summary": "Create a new donation",
                "parameters": [
                    {
                        "description": "Data Donasi Baru",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateDonationRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Donasi berhasil dibuat",
                        "schema": {
                            "$ref": "#/definitions/dto.SuccessWrapper"
                        }
                    },
                    "400": {
                        "description": "Request tidak valid",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Terjadi kesalahan internal",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorWrapper"
                        }
                    }
                }
            }
        },
        "/donations/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Mengambil satu data donasi berdasarkan ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Donations"
                ],
                "summary": "Get donation by ID",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "ID Donasi",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Berhasil mengambil data donasi",
                        "schema": {
                            "$ref": "#/definitions/dto.SuccessWrapper"
                        }
                    },
                    "400": {
                        "description": "Format ID tidak valid",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorWrapper"
                        }
                    },
                    "404": {
                        "description": "Data tidak ditemukan",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorWrapper"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Memperbarui data donasi yang sudah ada berdasarkan ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Donations"
                ],
                "summary": "Update a donation",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "ID Donasi",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Data Donasi yang Diperbarui",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateDonationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Donasi berhasil diperbarui",
                        "schema": {
                            "$ref": "#/definitions/dto.SuccessWrapper"
                        }
                    },
                    "400": {
                        "description": "Format ID atau request tidak valid",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Terjadi kesalahan internal",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorWrapper"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Menghapus data donasi berdasarkan ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Donations"
                ],
                "summary": "Delete a donation",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "ID Donasi",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Donasi berhasil dihapus",
                        "schema": {
                            "$ref": "#/definitions/dto.SuccessWrapper"
                        }
                    },
                    "400": {
                        "description": "Format ID tidak valid",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Terjadi kesalahan internal",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorWrapper"
                        }
                    }
                }
            }
        },
        "/events": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Mengambil daftar semua acara dengan paginasi",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Events"
                ],
                "summary": "Get all events",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Nomor halaman",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Jumlah item per halaman",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Berhasil mengambil daftar acara",
                        "schema": {
                            "$ref": "#/definitions/dto.SuccessWrapper"
                        }
                    },
                    "500": {
                        "description": "Terjadi kesalahan internal",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorWrapper"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Menambahkan acara (event) baru ke sistem",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Events"
                ],
                "summary": "Create a new event",
                "parameters": [
                    {
                        "description": "Data Acara Baru",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.EventRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Acara berhasil dibuat",
                        "schema": {
                            "$ref": "#/definitions/dto.SuccessWrapper"
                        }
                    },
                    "400": {
                        "description": "Request tidak valid",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Terjadi kesalahan internal",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorWrapper"
                        }
                    }
                }
            }
        },
        "/events/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Mengambil satu data acara berdasarkan ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Events"
                ],
                "summary": "Get event by ID",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "ID Acara",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Berhasil mengambil data acara",
                        "schema": {
                            "$ref": "#/definitions/dto.SuccessWrapper"
                        }
                    },
                    "400": {
                        "description": "Format ID tidak valid",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorWrapper"
                        }
                    },
                    "404": {
                        "description": "Data tidak ditemukan",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorWrapper"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Memperbarui acara yang sudah ada berdasarkan ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Events"
                ],
                "summary": "Update an event",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "ID Acara",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Data Acara yang Diperbarui",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.EventRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Acara berhasil diperbarui",
                        "schema": {
                            "$ref": "#/definitions/dto.SuccessWrapper"
                        }
                    },
                    "400": {
                        "description": "Format ID atau request tidak valid",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Terjadi kesalahan internal",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorWrapper"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Menghapus acara berdasarkan ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Events"
                ],
                "summary": "Delete an event",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "ID Acara",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Acara berhasil dihapus",
                        "schema": {
                            "$ref": "#/definitions/dto.SuccessWrapper"
                        }
                    },
                    "400": {
                        "description": "Format ID tidak valid",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Terjadi kesalahan internal",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorWrapper"
                        }
                    }
                }
            }
        },
        "/locations": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Mengambil daftar semua lokasi dengan paginasi",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Locations"
                ],
                "summary": "Get all locations",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Nomor halaman",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Jumlah item per halaman",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Berhasil mengambil daftar lokasi",
                        "schema": {
                            "$ref": "#/definitions/dto.SuccessWrapper"
                        }
                    },
                    "500": {
                        "description": "Terjadi kesalahan internal",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorWrapper"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Menambahkan data lokasi baru ke sistem",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Locations"
                ],
                "summary": "Create a new location",
                "parameters": [
                    {
                        "description": "Data Lokasi Baru",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.LocationRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Lokasi berhasil dibuat",
                        "schema": {
                            "$ref": "#/definitions/dto.SuccessWrapper"
                        }
                    },
                    "400": {
                        "description": "Request tidak valid",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Terjadi kesalahan internal",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorWrapper"
                        }
                    }
                }
            }
        },
        "/locations/nearby": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Mengambil daftar lokasi terurut dari yang terdekat berdasarkan latitude dan longitude pengguna",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Locations"
                ],
                "summary": "Get nearby locations",
                "parameters": [
                    {
                        "type": "number",
                        "description": "Latitude Pengguna",
                        "name": "lat",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "Longitude Pengguna",
                        "name": "lon",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Berhasil mengambil daftar lokasi terdekat",
                        "schema": {
                            "$ref": "#/definitions/dto.SuccessWrapper"
                        }
                    },
                    "400": {
                        "description": "Format latitude atau longitude tidak valid",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Terjadi kesalahan internal",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorWrapper"
                        }
                    }
                }
            }
        },
        "/locations/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Mengambil satu data lokasi berdasarkan ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Locations"
                ],
                "summary": "Get location by ID",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "ID Lokasi",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Berhasil mengambil data lokasi",
                        "schema": {
                            "$ref": "#/definitions/dto.SuccessWrapper"
                        }
                    },
                    "400": {
                        "description": "Format ID tidak valid",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorWrapper"
                        }
                    },
                    "404": {
                        "description": "Data tidak ditemukan",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorWrapper"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Memperbarui data lokasi yang sudah ada berdasarkan ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Locations"
                ],
                "summary": "Update a location",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "ID Lokasi",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Data Lokasi yang Diperbarui",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.LocationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lokasi berhasil diperbarui",
                        "schema": {
                            "$ref": "#/definitions/dto.SuccessWrapper"
                        }
                    },
                    "400": {
                        "description": "Format ID atau request tidak valid",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Terjadi kesalahan internal",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorWrapper"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Menghapus data lokasi berdasarkan ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Locations"
                ],
                "summary": "Delete a location",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "ID Lokasi",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lokasi berhasil dihapus",
                        "schema": {
                            "$ref": "#/definitions/dto.SuccessWrapper"
                        }
                    },
                    "400": {
                        "description": "Format ID tidak valid",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Terjadi kesalahan internal",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorWrapper"
                        }
                    }
                }
            }
        },
        "/profile": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Mengambil profil dasar dan detail dari pengguna yang sedang login",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "Get current user's profile",
                "responses": {
                    "200": {
                        "description": "Profil berhasil diambil",
                        "schema": {
                            "$ref": "#/definitions/dto.SuccessWrapper"
                        }
                    },
                    "401": {
                        "description": "Tidak terautentikasi",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorWrapper"
                        }
                    },
                    "404": {
                        "description": "Profil tidak ditemukan",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorWrapper"
                        }
                    }
                }
            }
        },
        "/profile/detail": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Mengambil profil detail dari pengguna yang sedang login",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile Details"
                ],
                "summary": "Get my user detail",
                "responses": {
                    "200": {
                        "description": "Detail profil berhasil diambil",
                        "schema": {
                            "$ref": "#/definitions/dto.SuccessWrapper"
                        }
                    },
                    "401": {
                        "description": "Tidak terautentikasi",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorWrapper"
                        }
                    },
                    "404": {
                        "description": "Detail profil tidak ditemukan",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorWrapper"
                        }
                    }
                }
            }
        },
        "/profile/detail/update": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Memperbarui profil detail dari pengguna yang sedang login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile Details"
                ],
                "summary": "Update my user detail",
                "parameters": [
                    {
                        "description": "Data Detail Profil yang Diperbarui",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UserDetailRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Detail profil berhasil diperbarui",
                        "schema": {
                            "$ref": "#/definitions/dto.SuccessWrapper"
                        }
                    },
                    "400": {
                        "description": "Request tidak valid",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorWrapper"
                        }
                    },
                    "401": {
                        "description": "Tidak terautentikasi",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Terjadi kesalahan internal",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorWrapper"
                        }
                    }
                }
            }
        },
        "/profile/details": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Membuat profil detail (NIK, alamat, dll.) untuk pengguna yang sedang login. Hanya bisa dibuat sekali.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile Details"
                ],
                "summary": "Create my user detail",
                "parameters": [
                    {
                        "description": "Data Detail Profil",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UserDetailRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Detail profil berhasil dibuat",
                        "schema": {
                            "$ref": "#/definitions/dto.SuccessWrapper"
                        }
                    },
                    "400": {
                        "description": "Request tidak valid",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorWrapper"
                        }
                    },
                    "401": {
                        "description": "Tidak terautentikasi",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Terjadi kesalahan internal",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorWrapper"
                        }
                    }
                }
            }
        },
        "/profile/update": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Memperbarui informasi dasar (nama, email) dari pengguna yang sedang login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "Update current user's profile",
                "parameters": [
                    {
                        "description": "Data Profil yang Diperbarui",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Profil berhasil diperbarui",
                        "schema": {
                            "$ref": "#/definitions/dto.SuccessWrapper"
                        }
                    },
                    "400": {
                        "description": "Request tidak valid",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorWrapper"
                        }
                    },
                    "401": {
                        "description": "Tidak terautentikasi",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Terjadi kesalahan internal",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorWrapper"
                        }
                    }
                }
            }
        },
        "/stocks": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Mengambil daftar semua stok darah dengan paginasi",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Stocks"
                ],
                "summary": "Get all stocks",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Nomor halaman",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Jumlah item per halaman",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Berhasil mengambil daftar stok",
                        "schema": {
                            "$ref": "#/definitions/dto.SuccessWrapper"
                        }
                    },
                    "500": {
                        "description": "Terjadi kesalahan internal",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorWrapper"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Menambahkan data stok darah baru ke sistem",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Stocks"
                ],
                "summary": "Create a new stock",
                "parameters": [
                    {
                        "description": "Data Stok Baru",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.StockRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Stok berhasil dibuat",
                        "schema": {
                            "$ref": "#/definitions/dto.SuccessWrapper"
                        }
                    },
                    "400": {
                        "description": "Request tidak valid",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Terjadi kesalahan internal",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorWrapper"
                        }
                    }
                }
            }
        },
        "/stocks/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Mengambil satu data stok darah berdasarkan ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Stocks"
                ],
                "summary": "Get stock by ID",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "ID Stok",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Berhasil mengambil data stok",
                        "schema": {
                            "$ref": "#/definitions/dto.SuccessWrapper"
                        }
                    },
                    "400": {
                        "description": "Format ID tidak valid",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorWrapper"
                        }
                    },
                    "404": {
                        "description": "Data tidak ditemukan",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorWrapper"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Memperbarui data stok darah yang sudah ada berdasarkan ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Stocks"
                ],
                "summary": "Update a stock",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "ID Stok",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Data Stok yang Diperbarui",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.StockRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Stok berhasil diperbarui",
                        "schema": {
                            "$ref": "#/definitions/dto.SuccessWrapper"
                        }
                    },
                    "400": {
                        "description": "Format ID atau request tidak valid",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Terjadi kesalahan internal",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorWrapper"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Menghapus data stok darah berdasarkan ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Stocks"
                ],
                "summary": "Delete a stock",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "ID Stok",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Stok berhasil dihapus",
                        "schema": {
                            "$ref": "#/definitions/dto.SuccessWrapper"
                        }
                    },
                    "400": {
                        "description": "Format ID tidak valid",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Terjadi kesalahan internal",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorWrapper"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Mengambil daftar semua lokasi dengan paginasi",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get all users",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Nomor halaman",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Jumlah item per halaman",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Berhasil mengambil daftar lokasi",
                        "schema": {
                            "$ref": "#/definitions/dto.SuccessWrapper"
                        }
                    },
                    "500": {
                        "description": "Terjadi kesalahan internal",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorWrapper"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Membuat profil detail (NIK, alamat, dll.) untuk pengguna yang sedang login. Hanya bisa dibuat sekali.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Create all user data",
                "parameters": [
                    {
                        "description": "Data Detail Profil",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UserDetailRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Detail profil berhasil dibuat",
                        "schema": {
                            "$ref": "#/definitions/dto.SuccessWrapper"
                        }
                    },
                    "400": {
                        "description": "Request tidak valid",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorWrapper"
                        }
                    },
                    "401": {
                        "description": "Tidak terautentikasi",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Terjadi kesalahan internal",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorWrapper"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.BloodRequestRequest": {
            "type": "object",
            "required": [
                "blood_type",
                "description",
                "location_id",
                "quantity"
            ],
            "properties": {
                "blood_type": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "location_id": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer"
                }
            }
        },
        "dto.CreateDonationRequest": {
            "type": "object",
            "required": [
                "donation_date",
                "location_id",
                "name",
                "status",
                "user_id"
            ],
            "properties": {
                "donation_date": {
                    "type": "string"
                },
                "event_id": {
                    "type": "string"
                },
                "location_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "selesai",
                        "batal",
                        "pending"
                    ]
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "dto.ErrorWrapper": {
            "type": "object",
            "properties": {
                "data": {},
                "error": {},
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "dto.EventRequest": {
            "type": "object",
            "required": [
                "description",
                "end_date",
                "event_name",
                "location_id",
                "start_date"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "event_name": {
                    "type": "string"
                },
                "location_id": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                }
            }
        },
        "dto.LocationRequest": {
            "type": "object",
            "required": [
                "address",
                "city",
                "location_name"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "location_name": {
                    "type": "string"
                },
                "longitude": {
                    "type": "number"
                }
            }
        },
        "dto.LoginRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "dto.RegisterRequest": {
            "type": "object",
            "required": [
                "email",
                "name",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "location_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 8
                }
            }
        },
        "dto.StockRequest": {
            "type": "object",
            "required": [
                "bag_quantity",
                "blood_type",
                "location_id",
                "rhesus"
            ],
            "properties": {
                "bag_quantity": {
                    "type": "integer",
                    "minimum": 0
                },
                "blood_type": {
                    "type": "string",
                    "enum": [
                        "A",
                        "B",
                        "AB",
                        "O"
                    ]
                },
                "location_id": {
                    "type": "string"
                },
                "rhesus": {
                    "type": "string",
                    "enum": [
                        "+",
                        "-"
                    ]
                }
            }
        },
        "dto.SuccessWrapper": {
            "type": "object",
            "properties": {
                "data": {},
                "error": {},
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "dto.UpdateDonationRequest": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "status": {
                    "type": "string",
                    "enum": [
                        "selesai",
                        "batal",
                        "pending"
                    ]
                }
            }
        },
        "dto.UserDetailRequest": {
            "type": "object",
            "required": [
                "address",
                "date_of_birth",
                "full_name",
                "gender",
                "is_active_donor",
                "phone_number"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "blood_type": {
                    "type": "string"
                },
                "date_of_birth": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "gender": {
                    "type": "string",
                    "enum": [
                        "L",
                        "P"
                    ]
                },
                "is_active_donor": {
                    "type": "boolean"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "phone_number": {
                    "type": "string",
                    "maxLength": 15,
                    "minLength": 10
                },
                "rhesus": {
                    "type": "string"
                },
                "weight": {
                    "type": "number"
                }
            }
        },
        "dto.UserRequest": {
            "type": "object",
            "required": [
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 8
                },
                "role": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}