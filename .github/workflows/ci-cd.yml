# .github/workflows/ci-cd.yml

name: CI/CD for Donor API

on:
  push:
    branches:
      - main

jobs:
  # Job untuk testing
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.23.0"

      - name: Run tests
        run: go test ./...

  # Job untuk build dan deploy
  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          # Membuat 2 tag: 'latest' dan satu tag unik berdasarkan ID commit
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/donor-api:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/donor-api:${{ github.sha }}

      - name: Deploy to VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_SSH_HOST }}
          username: ${{ secrets.VPS_SSH_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            # Tentukan variabel untuk nama image dan tag unik
            IMAGE_NAME=${{ secrets.DOCKERHUB_USERNAME }}/donor-api
            IMAGE_TAG=${{ github.sha }}

            # Masuk ke direktori proyek di VPS
            cd /home/ubuntu/donor-api

            # Buat file .env dari secret
            echo "${{ secrets.ENV_FILE }}" > .env

            # Tarik image spesifik yang baru dibuat dari Docker Hub
            docker pull $IMAGE_NAME:$IMAGE_TAG

            # Ganti baris 'image:' di docker-compose.yml dengan tag baru
            # Ini memastikan compose akan menggunakan image yang benar
            sed -i "s|image: .*|image: $IMAGE_NAME:$IMAGE_TAG|g" docker-compose.yml

            # Nyalakan kembali aplikasi. 'up' akan otomatis membuat ulang container
            # karena nama image di file compose berubah.
            docker compose up -d --no-deps app

            # Hapus image lama yang tidak terpakai untuk menghemat ruang
            docker image prune -f
